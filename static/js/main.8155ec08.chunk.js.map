{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","className","cn","disabled","href","onClick","map","page","active","ITEMS_PER_PAGE_OPTIONS","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","startItem","endItem","min","items","el","id","value","onChange","event","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"mMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQd,EAAW,EAAGW,GAE5B,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBR,IAA3C,SACE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,kBAAMV,EAAc,GAAKC,EAAaD,EAAc,IAL/D,oBAUDK,EAAMM,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQb,IAAgBY,IAFvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMV,IAAgBY,GAAQX,EAAaW,IAJtD,SAMGA,KATEA,MAaT,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUR,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,kBAAMV,EAAcE,GACxBD,EAAaD,EAAc,IANlC,wBC/CFc,G,MAAyB,CAAC,EAAG,EAAG,GAAI,KAG7BC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBiB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACMC,GAAapB,EAAc,GAAKkB,EAAe,EAC/CG,EAAUlB,KAAKmB,IAAItB,EAAckB,EAN3B,IAONK,EAAQhC,EAAW6B,EAAWC,GAASV,KAAI,SAAAa,GAAE,qBAAYA,MAO/D,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCoB,EADjC,cACgDC,EADhD,eAlBQ,GAkBR,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOR,EACPS,SApBY,SAACC,GACrBT,GAAiBS,EAAMC,OAAOH,OAC9BT,EAAe,IAaT,SAOGH,EAAuBH,KAAI,SAAAmB,GAAM,OAChC,wBAAqBJ,MAAOI,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MA7CM,GA8CNC,QAASmB,EACTlB,YAAaA,EACbC,aAAc,SAACW,GAAD,OAAUK,EAAeL,MAEzC,6BACGW,EAAMZ,KAAI,SAAAqB,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvDlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8155ec08.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, numberOfPages);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => currentPage > 1 && onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', { active: currentPage === page })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => currentPage !== page && onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item', {\n        disabled: currentPage === numberOfPages,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === numberOfPages}\n          onClick={() => currentPage < numberOfPages\n            && onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\nimport { getNumbers } from './utils';\n\nconst ITEMS_PER_PAGE_OPTIONS = [3, 5, 10, 20];\nconst TOTAL = 42;\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const startItem = (currentPage - 1) * itemsPerPage + 1;\n  const endItem = Math.min(currentPage * itemsPerPage, TOTAL);\n  const items = getNumbers(startItem, endItem).map(el => `Item ${el}`);\n\n  const selectPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem} - ${endItem} of ${TOTAL})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={selectPerPage}\n          >\n            {ITEMS_PER_PAGE_OPTIONS.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={TOTAL}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n      <ul>\n        {items.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}